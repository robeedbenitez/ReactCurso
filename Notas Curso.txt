		React
----------------------------------------------
jsx es una mezcla entre el javascript y html
npx create-react-app nombreapp // crear una app de react
npm start // iniciar el servidor 

		JavaScript

-------Template String-------
const nombreCompleto= `${nombre} ${apellido}` // se imprime el string tal cual como esta en las comillas 

--------------	objects	----------------

{nombre:objeto} crea el objeto con el nombre
{nombreObjeto} crear el objeto con el nombre
console.log({nombre:objeto}) imprimir objeto
console.table({nombre:objeto}) imprimir objeto en tabla
		Mutaciones
persona=persona //Error solo se copia la referecia del objeto, no se crea uno nuevo
persona2={...persona} // operador Spread de javascript permite clonar las propidades del objeto al nuevo 

--------	Arreglos	----------
no se recomineda usar el new array()
no se recomienda usar push
recordar el operador spred que extrae los atributos del objeto 

-----------	funciones	--------
funciones con funtions 
funciones con funciones fecla `=>`

----------- 	Desestructuracion de objetos 	------------
es una forma de obtener atributos de un objeto con {atributo}






-----		React 	-------------
Componentes: un componente es una encapsulacion de codigo especializado
Router: es una forma de cargar elementos de una pagina sin tener que recargarla

Recordar que se puede eliminar todo los de src y creear el index.js npx create-react-app nombreapp // crear una app de react
npm start // iniciar el servidor 

para utilizar 'html' recordar que react trabaja con jsx

los componentes en react se nombre con el estandar primeras en mayusculas EjemploApp.js
	los componentes estan orientados a clases y a funciones 
	*recomendacion trabajar los componentes por funciones (funcional Componentes)*

-------		Pasar componentes JSX ---------
Para el return de la funcion de los componentes html se puede utilizar Fragment que no deja un <div></div> vacios
o lo mismo a tener el retunr de <></> React reconoce esto como un Fragment
//import {Fragment} from "react";
/*
return (
	<Fragment> 
        	<h1> hola mundo</h1>
        	<p>Esto es un primer componente de React</p>
        </Fragment>) 
*/

--------	Propiedades 	-----------
Las props son propiedades del padre al hijo entre componentes que se pueden enviar informacion
<PrimeraApp saludo="hola" /> // 
{saludo="saludo por defecto"} // si existe saludo lo muestra, si no el de defecto.

--------	PropTypes 	-------------

import PropTypes from 'prop-types';

Tipos de propidades que se necesitan al momento de captar y enviar informacion
(obliga a enviar propiedades correctas)
PrimeraApp.propTypes = {
    saludo: PropTypes.string.isRequired,
    otra: PropTypes.number,
}

Shotcut importante
rafcp // (react app funcional component props) crea estrutura base de las funcional components con props

--------- 	Eventos ----------
<button onClick={ejemploFuncion} >+1</button>
Para los eventos hay una parte importante en las funciones que se debe escribir solo la referencia o variable de las funcion
debido a que el codigo se ejecuta secuencialmente y al princio no funciona a menos que la funcion retorne otra funcion


